


/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
/* Include all behaviour includes needed by system behaviors/macros */
#include <dt-bindings/zmk/outputs.h>

/* Include behaviour includes needed by key binds - automatically generated */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    /* Glove80 system behavior & macros */
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };
     copy: copy {
          compatible = "zmk,behavior-macro";
          label = "COPY";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LGUI>
            , <&macro_tap &kp C>
            , <&macro_release &kp LGUI>;
      };
      paste: paste {
          compatible = "zmk,behavior-macro";
          label = "PASTE";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LGUI>
            , <&macro_tap &kp V>
            , <&macro_release &kp LGUI>;
      };
      selectall: selectall {
          compatible = "zmk,behavior-macro";
          label = "SELECTALL";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LGUI>
            , <&macro_tap &kp A>
            , <&macro_release &kp LGUI>;
      };
      closewindow: closewindow {
          compatible = "zmk,behavior-macro";
          label = "CLOSEWINDOW";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LALT>
            , <&macro_tap &kp F4>
            , <&macro_release &kp LALT>;
      };
      movewindowright: movewindowright {
          compatible = "zmk,behavior-macro";
          label = "MOVEWINDOWRIGHT";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LGUI &kp LSHFT>
            , <&macro_tap &kp RIGHT_ARROW>
            , <&macro_release &kp LGUI &kp LSHFT>;
      };
      movewindowleft: movewindowleft {
          compatible = "zmk,behavior-macro";
          label = "MOVEWINDOWLEFT";
          #binding-cells = <0>;
          bindings
            = <&macro_press &kp LGUI &kp LSHFT>
            , <&macro_tap &kp LEFT_ARROW>
            , <&macro_release &kp LGUI &kp LSHFT>;
          };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };
    };

    macros {
        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };
    };

    macros {
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };
    };

    macros {
        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };

    /* Custom Defined Behaviors */


    /* Automatically generated keymap */
    keymap {
        compatible = "zmk,keymap";


        layer_Base {
            bindings = <
    &kp F1     &kp F2   &kp F3    &kp F4    &kp F5                                                                                  &kp F6     &kp F7    &kp F8    &kp F9    &kp F10
 &kp EQUAL     &kp N1   &kp N2    &kp N3    &kp N4  &kp N5                                                                &kp N6    &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
   &kp TAB      &kp Q    &kp W     &kp E     &kp R   &kp T                                                                 &kp Y     &kp U      &kp I     &kp O     &kp P   &kp BSLH
    &lt lower ESC      &kp A    &kp S     &kp D     &kp F   &kp G                                                                 &kp H     &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z    &kp X     &kp C     &kp V   &kp B    &kp DEL  &lower  &copy   &magic 2 0  &movewindowleft  &movewindowright   &kp N     &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
 &kp LCTRL  &kp GRAVE  &kp ESC  &kp LALT  &kp LGUI          &kp SPACE     &mo 3    &paste   &selectall   &kp RET   &kp BSPC          &kp RGUI   &kp RALT  &kp LBKT  &kp RBKT  &kp LCTRL
            >;
        };

        layer_Lower {
            bindings = <
     &trans        &trans        &trans  &trans  &trans                                                                      &trans  &trans     &trans  &trans  &trans
     &trans        &trans        &trans  &trans  &trans  &trans                                                    &trans    &trans  &trans     &trans  &trans  &trans
 &kp C_PLAY    &kp C_PREV    &kp C_NEXT  &trans  &trans  &trans                                                    &trans    &trans  &trans     &trans  &trans  &trans
     &trans  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans  &trans                                                   &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT &trans &trans
     &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans
     &trans        &trans        &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans     &trans  &trans  &trans
            >;
        };

        layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
      &reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none          &reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };

        layer_Symbol {
            bindings = <
 &trans     &trans        &trans    &trans     &trans                                                                           &trans    &trans    &trans     &trans   &trans
 &trans     &trans        &trans    &trans     &trans     &trans                                                     &trans     &trans    &trans    &trans     &trans  &kp F11
 &trans    &kp SQT        &kp LT    &kp GT    &kp DQT    &kp DOT                                                   &kp AMPS  &kp GRAVE  &kp LBKT  &kp RBKT  &kp PRCNT  &kp F12
 &trans   &kp EXCL     &kp MINUS  &kp PLUS  &kp EQUAL   &kp HASH                                                   &kp PIPE  &kp COLON  &kp LPAR  &kp RPAR  &kp QMARK   &trans
 &trans  &kp CARET  &kp KP_SLASH  &kp STAR   &kp BSLH  &kp GRAVE  &trans  &trans  &trans  &trans  &trans  &trans  &kp TILDE   &kp DLLR  &kp LBRC  &kp RBRC     &kp AT   &trans
 &trans     &trans        &trans    &trans     &trans             &trans  &trans  &trans  &trans  &trans  &trans                &trans    &trans    &trans     &trans   &trans
            >;
        };

    };
};
